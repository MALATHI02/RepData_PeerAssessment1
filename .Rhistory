install.packages("swirl")
install_from_swirl("Exploratory Data Analysis")
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(polltion)
dim(pollution)
pollution$pm25
summary(pollution$pm25)
ppm
quantile(ppm)
help boxplot
boxplot
boxplot(ppm,col="blue")
boxplot(ppm,col="blue",h=12)
abline(h = 12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,data="green",col="green")
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
polltion
pollution
names(pollution)
reg= pollution$region
reg <- table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region)
eval(pm25~region)
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- (pollution)
east <- subset(pollution,region=="east")
head
head(east)
hist(pollution ~ pm25,col = "green")
hist(pm25,col = "green")
hist(east ~ pm25,col = "green")
hist(east$pm25,col = "green")
hist(subset(pm25),region = "west", col = "green")
hist(subset(pollution$pm25),region = "west", col = "green")
hist(subset(pollution$pm25),region = "west", col = "green")
hist(subset(pm25),region = "west", col = "green")
pollution
hist(subset(pollution,region=="west")$pm25, col = "green")
plot
with(pollution, plot(latitude, pm25))
abline(h=12,lwd=2,lty=2)
s
scatterplot(
)
plot((pollution$latitude,ppm),color=
plot((pollution$latitude,ppm),col="green")
plot((pollution$latitude),col="green")
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude, ppm, col = pollution$region)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- (pollution, region="west")
west = (pollution, region="west")
west <- (pollution, region = "west")
west <- subset(pollution, region = "west")
west <- subset(pollution,region=="west")
plot(west$latitude,west$pm25,main = "West")
plot(east$latitude,east$pm25,main = "East")
?Devices
plot(eruptions,waiting)
plot(eruptions,waiting)
plot(faithful
)
with(faithful, plot(eruptions, waiting))
title
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy("png,"geyserplot.png")
dev.copy("png , "geyserplot.png")
dev.copy("png" , "geyserplot.png")
dev.copy("png","geyserplot.png")
dev.copy(device="png",device="geyserplot.png")
dev.copy(device="png")
dev.copy()
dev.copy("png","geyserplot.png")
dev.copy(png,"geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
utils:::menuInstallPkgs()
getwd()
swirl()
swirl()
q()
knitr::opts_chunk$set(echo = TRUE)
"Reading and Processing the data"
'''
library(dplyr)
library(ggplot2)
setwd("C:\\Malathi\\Coursera\\RepData_PeerAssessment1")
data <- read.csv("activity.csv")
```{r cars}
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
str(data)
library(dplyr)
library(ggplot2)
setwd("C:\\Malathi\\Coursera\\RepData_PeerAssessment1")
data <- read.csv("activity.csv")
actdata <- read.csv("activity.csv")
View(data)
str(data)
